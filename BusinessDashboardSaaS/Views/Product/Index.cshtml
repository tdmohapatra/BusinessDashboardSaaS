@model IEnumerable<Product>

@{
    ViewData["Title"] = "Products";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #4361ee;
        --primary-dark: #3a56d4;
        --danger-color: #ef233c;
        --card-bg: rgba(255, 255, 255, 0.95);
    }

    body {
        background-color: #edf2f7;
    }

    .card {
        border-radius: 18px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        background: var(--card-bg);
        backdrop-filter: blur(8px);
        border: none;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
    }

        .btn-primary:hover {
            background-color: var(--primary-dark);
        }

    .btn-danger {
        background-color: var(--danger-color);
        border: none;
    }

        .btn-danger:hover {
            background-color: #c30723;
        }

    .table th {
        background-color: #2b2d42;
        color: white;
        cursor: pointer;
    }

    table tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.05);
    }

    .search-box {
        max-width: 250px;
    }
</style>

<div class="container mt-5">
    <div class="card p-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="d-flex gap-3 align-items-center">
                <h2><i class="fa fa-boxes-stacked me-2"></i> Product List</h2>
               
            </div>
            <input type="text" id="searchInput" class="form-control search-box" placeholder="Search...">
            <button class="btn btn-primary" onclick="openAddModal()">
                <i class="fa fa-plus me-1"></i> Add Product
            </button>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle" id="productTable">
                <thead>
                    <tr>
                        <th onclick="sortTable(0)">Name <i class="fa fa-sort"></i></th>
                        <th onclick="sortTable(1)">Category <i class="fa fa-sort"></i></th>
                        <th onclick="sortTable(2)">Price ($) <i class="fa fa-sort"></i></th>
                        <th onclick="sortTable(3)">Stock <i class="fa fa-sort"></i></th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="productBody">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Category</td>
                            <td>@item.Price.ToString("0.00")</td>
                            <td>@item.StockQty</td>
                            <td>
                                <button class="btn btn-sm btn-warning me-1" onclick="editProduct(@item.ProductId)">
                                    <i class="fa fa-pen-to-square"></i> Edit
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteProduct(@item.ProductId)">
                                    <i class="fa fa-trash"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- ✅ Product Modal -->
<div class="modal fade" id="productModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content rounded-3">
            <form id="productForm">
                <div class="modal-header bg-primary text-white rounded-top-3">
                    <h5 class="modal-title">
                        <i class="fa fa-box-open me-1"></i> Product
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="ProductId" name="ProductId" />
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" id="Name" name="Name" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <input type="text" class="form-control" id="Category" name="Category" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Price ($)</label>
                        <input type="number" step="0.01" class="form-control" id="Price" name="Price" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Stock Quantity</label>
                        <input type="number" class="form-control" id="StockQty" name="StockQty" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">
                        <i class="fa fa-check me-1"></i> Save
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ✅ Scripts -->
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/js/all.min.js"></script>

    <script>
        const modal = new bootstrap.Modal(document.getElementById('productModal'));

        function openAddModal() {
            $('#productForm')[0].reset();
            $('#ProductId').val(0);
            modal.show();
        }

        function editProduct(id) {
            $.get('/Product/GetById?id=' + id, function (data) {
                $('#ProductId').val(data.productId);
                $('#Name').val(data.name);
                $('#Category').val(data.category);
                $('#Price').val(data.price);
                $('#StockQty').val(data.stockQty);
                modal.show();
            });
        }

        function deleteProduct(id) {
            if (confirm("Are you sure you want to delete this product?")) {
                $.post('/Product/Delete', { id: id }, function (res) {
                    if (res.success) {
                        location.reload();
                    } else {
                        alert("Delete failed");
                    }
                });
            }
        }

        $('#productForm').submit(function (e) {
            e.preventDefault();
            const formData = $(this).serialize();
            $.post('/Product/Save', formData, function (res) {
                if (res.success) {
                    modal.hide();
                    location.reload();
                } else {
                    alert("Save failed");
                }
            });
        });

        // ✅ Search Function
        $('#searchInput').on('keyup', function () {
            const value = $(this).val().toLowerCase();
            $("#productBody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        // ✅ Sorting Function
        let sortDirection = true;
        function sortTable(column) {
            const table = document.getElementById("productTable");
            const rows = Array.from(table.rows).slice(1);
            const tbody = table.tBodies[0];

            rows.sort((a, b) => {
                const A = a.cells[column].innerText.trim().toLowerCase();
                const B = b.cells[column].innerText.trim().toLowerCase();

                if (!isNaN(A) && !isNaN(B)) {
                    return sortDirection ? A - B : B - A;
                } else {
                    return sortDirection ? A.localeCompare(B) : B.localeCompare(A);
                }
            });

            sortDirection = !sortDirection;
            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
}
